version: '3.8'

services:
  # MongoDB Database Service
  mongodb:
    image: mongo:7.0
    container_name: skillexchange-mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_DATABASE: skillExchange
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - mongodb_config:/data/configdb
    networks:
      - skillexchange-network
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  # Node.js Application Service  
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: skillexchange-app
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - PORT=3000
      - MONGO_URI=mongodb://mongodb:27017/skillExchange
    ports:
      - "3000:3000"
    volumes:
      - app_uploads:/app/public/uploads
      - app_logs:/app/logs
      - ./public/uploads:/app/public/uploads:rw  # Bind mount for development
      - type: tmpfs
        target: /tmp
        tmpfs:
          size: 100M
    networks:
      - skillexchange-network
    depends_on:
      mongodb:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000", "||", "exit", "1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

# Named volumes for data persistence
volumes:
  mongodb_data:
    driver: local
    name: skillexchange_mongodb_data
  mongodb_config:
    driver: local
    name: skillexchange_mongodb_config
  app_uploads:
    driver: local
    name: skillexchange_app_uploads
  app_logs:
    driver: local
    name: skillexchange_app_logs

# Custom network for service communication
networks:
  skillexchange-network:
    driver: bridge
    name: skillexchange-network
